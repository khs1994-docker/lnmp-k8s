# 时区
TZ=Asia/Shanghai

# fix me
K8S_ROOT=/wsl/wsl-k8s-data/k8s

# 通过以下域名访问 k8s apiserver
LNMP_K8S_DOMAINS=wsl2.k8s.khs1994.com,windows.k8s.khs1994.com,k8s.khs1994.com

# fix me docker registry 节点 IP
registry_hosts=127.0.0.1,localhost,gcr.io,registry.k8s.io,k8s.gcr.io,*.gcr.io,docker.khs1994.com,docker.doamin.com

ENCRYPTION_KEY=OjX8IHpM4bq+QboY78lAdy5V8KrwHtsDef0KANJLzYk=

# ENCRYPTION_KEY=$(head -c 32 /dev/urandom | base64)

# 最好使用 当前未用的网段 来定义服务网段和 Pod 网段

# 服务网段，部署前路由不可达，部署后集群内路由可达(kube-proxy 和 ipvs 保证)
SERVICE_CIDR=10.254.0.0/16

# Pod 网段，建议 /16 段地址，部署前路由不可达，部署后集群内路由可达(calico 保证)
CLUSTER_CIDR=10.244.0.0/16

# 服务端口范围 (NodePort Range) default is 30000-32767
NODE_PORT_RANGE="1-65535"

# Windows IP
NODE_IPS=192.168.199.100

# 集群各 IP 对应的 主机名数组
# NODE_NAMES=node1,node2,node3

# kube-apiserver 节点 IP
# MASTER_IP=

# fix me kube-apiserver https 地址
KUBE_APISERVER=https://wsl2.k8s.khs1994.com:6443

# etcd 集群服务地址列表
# ETCD_ENDPOINTS="https://192.168.57.110:2379,https://192.168.57.111:2379,https://192.168.57.112:2379"

# etcd 集群间通信的 IP 和端口
# ETCD_NODES="coreos1=https://192.168.57.110:2380,coreos2=https://192.168.57.111:2380,coreos3=https://192.168.57.112:2380"

# etcd token

# ETCD_TOKEN=mytoken

# kubernetes 服务 IP (一般是 SERVICE_CIDR 中第一个IP)
CLUSTER_KUBERNETES_SVC_IP=10.254.0.1

# 集群 DNS 服务 IP (从 SERVICE_CIDR 中预分配)
CLUSTER_DNS_SVC_IP=10.254.0.2

# 集群 DNS 域名
CLUSTER_DNS_DOMAIN=cluster.local.

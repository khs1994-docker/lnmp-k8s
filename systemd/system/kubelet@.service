[Unit]
Description=Kubernetes Kubelet
Documentation=https://github.com/kubernetes/kubernetes
After=network-online.target network.target
Wants=network-online.target network.target

Requires=kube-reset-kubelet.service
After=kube-reset-kubelet.service

After=kube-apiserver.service

After=cri-containerd.service \
cri-containerd@1.3.service \
cri-containerd@1.4.service \
cri-containerd@1.5.service

After=cri-o.service

After=cri-dockerd.service

Conflicts=wsl-k8s-shutdown.target

After=etc-containers.mount \
var-lib-cni.mount \
var-lib-k8s.mount \
var-lib-kubelet.mount \
var-log-calico.mount \
var-log-containers.mount \
var-log-pods.mount

BindsTo=etc-containers.mount \
var-lib-cni.mount \
var-lib-k8s.mount \
var-lib-kubelet.mount \
var-log-calico.mount \
var-log-containers.mount \
var-log-pods.mount

; Requires=var-lib-kubelet.mount
; RequiresMountsFor=/var/lib/kubelet

# ConditionVirtualization=wsl
# ConditionPathIsMountPoint=/wsl/wsl-k8s-data
# RequiresMountsFor=/wsl/wsl-k8s-data

ConditionFileIsExecutable=/opt/k8s/bin/kubelet
ConditionFileIsExecutable=/opt/k8s/bin/kubeadm
; cpu cpuacct io blkio memory devices pids
ConditionControlGroupController=cpu
[Service]
; WorkingDirectory=/opt/k8s/var/lib/kubelet
Environment="NODE_NAME=##NODE_NAME##"
# Fix me
Environment="KUBE_APISERVER=##KUBE_APISERVER##"

Environment="K8S_ROOT=/opt/k8s"

ExecStartPre=/opt/k8s/bin/kubeadm version
ExecStartPre=-/usr/bin/env swapoff -a
ExecStartPre=-/opt/k8s/bin/generate-kubelet-bootstrap-kubeconfig.sh

; ExecStartPre=-/opt/k8s/bin/mount_bind_if_not_mount.sh \
; /opt/k8s/var/lib/kubelet /var/lib/kubelet
; ExecStartPre=-/opt/k8s/bin/mount_bind_if_not_mount.sh \
; /opt/k8s/usr/libexec/kubernetes/kubelet-plugins/volume/exec/ /usr/libexec/kubernetes/kubelet-plugins/volume/exec/
ExecStartPre=-/opt/k8s/bin/mount_bind_if_not_mount.sh \
/opt/k8s/usr/libexec/kubernetes /usr/libexec/kubernetes

ExecStartPre=-/usr/bin/env mount --make-shared /
ExecStartPre=-/usr/bin/env mount --make-shared /sys
; ExecStartPre=-/usr/bin/env mount --make-shared /var/lib/kubelet

; ExecStartPre=-/opt/k8s/bin/mount_bind_if_not_mount.sh \
; ${K8S_ROOT}/var/lib/k8s /var/lib/k8s

; ExecStartPre=-/opt/k8s/bin/mount_bind_if_not_mount.sh \
; ${K8S_ROOT}/var/lib/cni /var/lib/cni

; ExecStartPre=-/opt/k8s/bin/mount_bind_if_not_mount.sh \
; ${K8S_ROOT}/var/lib/docker /var/lib/docker

ExecStartPre=-/opt/k8s/bin/mount_bind_if_not_mount.sh \
${K8S_ROOT}/opt/cni/bin __opt/k8s__/opt/cni/bin
ExecStartPre=-/opt/k8s/bin/mount_bind_if_not_mount.sh \
${K8S_ROOT}/etc/cni/net.d __opt/k8s__/etc/cni/net.d

; ExecStartPre=-/opt/k8s/bin/mount_bind_if_not_mount.sh \
; ${K8S_ROOT}/etc/containers /etc/containers

; ExecStartPre=-/opt/k8s/bin/mount_bind_if_not_mount.sh \
; ${K8S_ROOT}/var/log/containers /var/log/containers
; ExecStartPre=-/opt/k8s/bin/mount_bind_if_not_mount.sh \
; ${K8S_ROOT}/var/log/pods /var/log/pods

; ExecStartPre=-/opt/k8s/bin/mount_bind_if_not_mount.sh \
; ${K8S_ROOT}/var/log/calico /var/log/calico

ExecStartPre=/usr/bin/env mountpoint /var/lib/kubelet
ExecStartPre=-/usr/bin/env mountpoint __opt/k8s__/opt/cni/bin
ExecStartPre=-/usr/bin/env mountpoint __opt/k8s__/etc/cni/net.d
ExecStartPre=/usr/bin/env mountpoint /usr/libexec/kubernetes

ExecStart=/opt/k8s/bin/kubelet \
--bootstrap-kubeconfig=${K8S_ROOT}/etc/kubernetes/kubelet-bootstrap.kubeconfig \
--cert-dir=${K8S_ROOT}/etc/kubernetes/pki \
--root-dir=/opt/k8s/var/lib/kubelet \
--kubeconfig=${K8S_ROOT}/etc/kubernetes/kubelet.kubeconfig \
--config=${K8S_ROOT}/etc/kubernetes/kubelet.config.yaml \
--hostname-override=${NODE_NAME} \
--logtostderr=true \
--volume-plugin-dir=/opt/k8s/usr/libexec/kubernetes/kubelet-plugins/volume/exec/ \
--dynamic-config-dir=/opt/k8s/var/lib/kubelet/dynamic-config \
--v=2 \
--container-runtime=remote \
# --logging-format=json \
--container-runtime-endpoint=unix:///run/%i/%i.sock

; kubelet@cri-containerd
; kubelet@crio

; ExecStopPost=-/usr/bin/env umount /var/lib/kubelet
; ExecStopPost=-/usr/bin/env umount /usr/libexec/kubernetes/kubelet-plugins/volume/exec/
ExecStopPost=-/usr/bin/env umount /usr/libexec/kubernetes

Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
WantedBy=wsl-k8s.target
; Also=cri-containerd@1.5.service
Also=cri-containerd@.service
DefaultInstance=cri-containerd
; Alias=kubelet-alias.service

(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{380:function(t,r,a){"use strict";a.r(r);var e=a(42),s=Object(e.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"端口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#端口"}},[t._v("#")]),t._v(" 端口")]),t._v(" "),a("h2",{attrs:{id:"nodeport"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodeport"}},[t._v("#")]),t._v(" nodePort")]),t._v(" "),a("p",[t._v("外部机器可访问的端口，节点的端口。")]),t._v(" "),a("h2",{attrs:{id:"targetport"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#targetport"}},[t._v("#")]),t._v(" targetPort")]),t._v(" "),a("p",[t._v("容器的端口（最根本的端口入口），与制作容器时暴露的端口一致（ DockerFile 中 "),a("strong",[t._v("EXPOSE")]),t._v(" )")]),t._v(" "),a("h2",{attrs:{id:"port"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#port"}},[t._v("#")]),t._v(" port")]),t._v(" "),a("p",[t._v("Kubernetes 中的 "),a("strong",[t._v("服务之间")]),t._v(" 访问的端口,尽管 MySQL 容器暴露了 3306 端口,但是集群内其他容器需要通过 33306 端口访问该服务，外部机器不能访问mysql服务，因为他没有配置NodePort类型")])])}),[],!1,null,null,null);r.default=s.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{358:function(e,t,n){"use strict";n.r(t);var i=n(33),r=Object(i.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"cni"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cni"}},[e._v("#")]),e._v(" CNI")]),e._v(" "),n("ul",[n("li",[e._v("https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/")])]),e._v(" "),n("p",[e._v("容器运行时为 "),n("code",[e._v("Docker")]),e._v(", 网络由 "),n("code",[e._v("Docker")]),e._v(" 管理，无需 "),n("code",[e._v("CNI")]),e._v("。或者通过 "),n("code",[e._v("kubelet")]),e._v(" 的 "),n("code",[e._v("--network-plugin=cni")]),e._v(" 指定网络由 "),n("code",[e._v("CNI")]),e._v(" 管理。")]),e._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[e._v("plugins.go:166"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" Loaded network plugin "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"cni"')]),e._v("\ndocker_service.go:255"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" Docker cri networking managed by cni\n")])])]),n("p",[e._v("容器运行时为其他（例如 "),n("code",[e._v("containerd")]),e._v("）,则需要配置 "),n("code",[e._v("CNI")])]),e._v(" "),n("p",[e._v("kubelet 参数（仅 Docker 运行时有效）")]),e._v(" "),n("p",[n("strong",[e._v("cni-bin-dir")]),e._v(" Kubelet probes this directory for plugins on startup")]),e._v(" "),n("p",[n("strong",[e._v("network-plugin")]),e._v(" The network plugin to use from "),n("strong",[e._v("cni-bin-dir")]),e._v(". It must match the name reported by a plugin probed from the plugin directory. For CNI plugins, this is simply "),n("strong",[e._v("cni")])]),e._v(" "),n("p",[e._v("If there are multiple CNI configuration files in the directory, the kubelet uses the configuration file that comes first by name in lexicographic order.")]),e._v(" "),n("p",[n("strong",[e._v("--network-plugin=cni")]),e._v(" specifies that we use the cni network plugin with actual CNI plugin binaries located in "),n("strong",[e._v("--cni-bin-dir (default /opt/cni/bin)")]),e._v(" and CNI plugin configuration located in "),n("strong",[e._v("--cni-conf-dir (default /etc/cni/net.d)")]),e._v(".")]),e._v(" "),n("p",[n("strong",[e._v("--network-plugin=kubenet")]),e._v(" specifies that we use the kubenet network plugin with CNI bridge and host-local plugins placed in "),n("strong",[e._v("/opt/cni/bin")]),e._v(" or "),n("strong",[e._v("cni-bin-dir")]),e._v(".")]),e._v(" "),n("p",[n("strong",[e._v("--network-plugin-mtu=9001")]),e._v(" specifies the MTU to use, currently only used by the "),n("strong",[e._v("kubenet")]),e._v(" network plugin.")]),e._v(" "),n("h2",{attrs:{id:"cniversion"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cniversion"}},[e._v("#")]),e._v(" cniVersion")]),e._v(" "),n("p",[e._v("CNI 配置文件必须设置 "),n("code",[e._v("cniVersion")])]),e._v(" "),n("ul",[n("li",[n("code",[e._v("cniVersion")]),e._v(" https://github.com/containernetworking/cni/blob/master/SPEC.md")]),e._v(" "),n("li",[e._v("https://github.com/kubernetes/kubernetes/pull/80482")]),e._v(" "),n("li",[e._v("https://github.com/coreos/flannel/issues/1173")])]),e._v(" "),n("h2",{attrs:{id:"参考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),n("ul",[n("li",[e._v("https://segmentfault.com/a/1190000017182169")])])])}),[],!1,null,null,null);t.default=r.exports}}]);
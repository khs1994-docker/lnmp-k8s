(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{366:function(t,e,s){"use strict";s.r(e);var r=s(42),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"k8s-lnmp-docs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#k8s-lnmp-docs"}},[t._v("#")]),t._v(" K8s LNMP Docs")]),t._v(" "),s("blockquote",[s("p",[t._v("本文档 "),s("strong",[t._v("不会")]),t._v(" 一步一步的教你如何部署 Kubernetes，只是记录一些本人搭建时遇到的问题及一些关键提示或步骤，如果你在遇到问题时，选择对应的主题查看，也许会发现解决方法。")])]),t._v(" "),s("h2",{attrs:{id:"准备"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#准备"}},[t._v("#")]),t._v(" 准备")]),t._v(" "),s("ul",[s("li",[t._v("Linux 知识")]),t._v(" "),s("li",[t._v("systemd 知识")]),t._v(" "),s("li",[t._v("Docker 知识")])]),t._v(" "),s("h2",{attrs:{id:"部署-kubernetes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部署-kubernetes"}},[t._v("#")]),t._v(" 部署 Kubernetes")]),t._v(" "),s("p",[t._v("请查看 "),s("a",{attrs:{href:"https://github.com/khs1994-docker/lnmp-k8s",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub"),s("OutboundLink")],1),t._v(" README.md 文件。")]),t._v(" "),s("p",[t._v("详细的搭建教程请查看这个项目：https://github.com/opsnull/follow-me-install-kubernetes-cluster")]),t._v(" "),s("h2",{attrs:{id:"yaml-文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yaml-文件"}},[t._v("#")]),t._v(" YAML 文件")]),t._v(" "),s("p",[t._v("请在 "),s("code",[t._v("deployment")]),t._v(" 文件夹查看。")]),t._v(" "),s("h2",{attrs:{id:"service"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#service"}},[t._v("#")]),t._v(" Service")]),t._v(" "),s("p",[t._v("Service 通过 "),s("code",[t._v("Label Selector")]),t._v(" 来匹配一系列的 Pod，Label Selector 允许在 Label 上做一系列的逻辑操作。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://kubernetes.io/docs/tutorials/kubernetes-basics/public/images/module_04_labels.svg",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"服务暴露方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务暴露方式"}},[t._v("#")]),t._v(" 服务暴露方式")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("https://blog.csdn.net/newcrane/article/details/79092577")])]),t._v(" "),s("li",[s("p",[t._v("https://blog.csdn.net/limx59/article/details/71717275")])]),t._v(" "),s("li",[s("p",[t._v("https://www.cnblogs.com/devilwind/p/8891636.html")])])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\ninternet\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n------------\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" Services "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"clusterip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#clusterip"}},[t._v("#")]),t._v(" ClusterIP")]),t._v(" "),s("p",[t._v("ClusterIP 服务是 Kubernetes 的默认服务。它给你一个集群内的服务，集群内的其它应用都可以访问该服务。集群外部无法访问它。")]),t._v(" "),s("p",[t._v("如果 从Internet 没法访问 ClusterIP 服务，那么我们为什么要讨论它呢？那是因为我们可以通过 Kubernetes 的 proxy 模式来访问该服务！")]),t._v(" "),s("h3",{attrs:{id:"nodeport"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodeport"}},[t._v("#")]),t._v(" Nodeport")]),t._v(" "),s("p",[t._v("把 service 的 port 映射到每个节点内部指定 port 上，所有节点内部映射的 port 都一样。")]),t._v(" "),s("p",[t._v("NodePort Service 是通过在节点上暴漏端口，然后通过将端口映射到具体某个服务上来实现服务暴漏，比较直观方便，但是对于集群来说，随着 Service 的不断增加，需要的端口越来越多，很容易出现端口冲突，而且不容易管理。当然对于小规模的集群服务，还是比较不错的。")]),t._v(" "),s("p",[t._v("NodePort 服务主要有两点区别于普通的 ClusterIP 服务。第一，它的类型是 NodePort 。有一个额外的端口，称为 nodePort，它指定节点上开放的端口值 。如果你不指定这个端口，系统将选择一个随机端口。大多数时候我们应该让 Kubernetes 来选择端口，因为如评论中 thockin 所说，用户自己来选择可用端口代价太大。")]),t._v(" "),s("h3",{attrs:{id:"loadbalancer-公有云"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#loadbalancer-公有云"}},[t._v("#")]),t._v(" Loadbalancer （公有云）")]),t._v(" "),s("p",[t._v("LoadBlancer Service 是 Kubernetes 结合云平台的组件，如国外 GCE、AWS、国内阿里云等等，使用它向使用的底层云平台申请创建负载均衡器来实现，有局限性，对于使用云平台的集群比较方便。")]),t._v(" "),s("blockquote",[s("p",[t._v("Docker 桌面版也可以使用")])]),t._v(" "),s("h3",{attrs:{id:"ingress"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ingress"}},[t._v("#")]),t._v(" Ingress")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\ninternet\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" Ingress "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n--"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("-----"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("--\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" Services "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"traefik"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#traefik"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://github.com/traefik/traefik",target:"_blank",rel:"noopener noreferrer"}},[t._v("Traefik"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/containous/traefik/master/docs/content/assets/img/traefik-architecture.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"官方文档导引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#官方文档导引"}},[t._v("#")]),t._v(" 官方文档导引")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://kubernetes.io/docs/concepts/overview/components/",target:"_blank",rel:"noopener noreferrer"}},[t._v("组件"),s("OutboundLink")],1)])]),t._v(" "),s("h1",{attrs:{id:"more-information"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#more-information"}},[t._v("#")]),t._v(" More Information")]),t._v(" "),s("ul",[s("li",[t._v("https://github.com/kubernetes/examples")]),t._v(" "),s("li",[t._v("https://my.oschina.net/u/3797264")]),t._v(" "),s("li",[t._v("https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/")]),t._v(" "),s("li",[t._v("https://kubernetes.io/docs/reference/command-line-tools-reference/")])]),t._v(" "),s("h1",{attrs:{id:"build-docs-vue-press"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build-docs-vue-press"}},[t._v("#")]),t._v(" Build Docs(Vue Press)")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -g vuepress\n\n$ vuepress dev\n\n$ vuepress build\n")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);